version: "3"

services:

  dashboard-frontend:
    build:
      context: dashboard-frontend
      dockerfile: ./Dockerfile
    ports:
      - 8080:8080
    environment:
      WAIT_FOR: dashboard-backend:8081

  dashboard-backend:
    hostname: dashboard-backend
    build:
      context: dashboard-backend
      dockerfile: ./Dockerfile
    depends_on:
      - redis
    ports:
      - 8081:8081
      - 8082:8082
      - 8083:8083
    environment:
      WAIT_FOR: redis:6379

  redis:
    build:
      context: redis
      dockerfile: ./Dockerfile
    ports:
      - 6379:6379

  data-emitter:
    build:
      context: DataEmitter
      dockerfile: ./Dockerfile
    depends_on:
      - kafka
    volumes:
      - type: bind
        source: ./DataEmitter/data
        target: /data/
        read_only: false
      - type: bind
        source: ${TAXI_DATASET}
        target: /dataset/
        read_only: true
    environment:
      WAIT_FOR: kafka:9092
      SPEED_MULTIPLIER: ${SPEED_MULTIPLIER}
      MAX_TAXIS: ${MAX_TAXIS}

  storm:
    build:
      context: storm
      dockerfile: ./Dockerfile
    depends_on:
      - redis
      - zookeeper
      - kafka
    environment:
      WAIT_FOR: kafka:9092
      WAIT_FOR_2: redis:6379

  zookeeper:
    image: wurstmeister/zookeeper:3.4.6
    hostname: zookeeper
    expose:
      - "2181"

  kafka:
    build:
      context: kafka
      dockerfile: ./Dockerfile
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
    expose:
      - 9092
    environment:
      WAIT_FOR: zookeeper:2181
      KAFKA_ADVERTISED_HOST_NAME: kafka
      KAFKA_ADVERTISED_PORT: 9092
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_CREATE_TOPICS: "test:1:1"
